plugins {
    id "io.opentelemetry.instrumentation.muzzle-generation"
    id "io.opentelemetry.instrumentation.muzzle-check"
    id "maven-publish"
}

apply from: "$rootDir/gradle/instrumentation.gradle"

dependencies {
    implementation(project(":instrumentation:kafka-common"))

    compileOnly("org.apache.kafka:kafka-clients:${versions.kafka}")
    compileOnly("io.opentelemetry.javaagent:opentelemetry-javaagent:${versions.opentelemetryJavaagent}")
    compileOnly("org.slf4j:slf4j-api:${versions.slf4j}")
    compileOnly("io.opentelemetry:opentelemetry-sdk-extension-autoconfigure-spi:${versions.opentelemetry}")

    implementation("io.opentelemetry.javaagent.instrumentation:opentelemetry-javaagent-kafka-clients-0.11:${versions.opentelemetryJavaagentAlpha}")

    implementation("com.fasterxml.jackson.core:jackson-databind:${versions.jackson}")
    implementation("com.fasterxml.jackson.core:jackson-core:${versions.jackson}")
    implementation("com.fasterxml.jackson.core:jackson-annotations:${versions.jackson}")
    implementation("com.github.wnameless.json:json-flattener:${versions.jsonFlattener}")
    implementation("com.github.wnameless.json:json-base:${versions.jsonBase}")

    add("codegen", "io.opentelemetry.javaagent:opentelemetry-javaagent-tooling:${versions.opentelemetryJavaagentAlpha}")
    add("codegen", "ch.qos.logback:logback-classic:${versions.logback}")
    add("muzzleBootstrap", "io.opentelemetry.instrumentation:opentelemetry-instrumentation-api-annotation-support:${versions.opentelemetryJavaagentAlpha}")
    add("muzzleBootstrap", "io.opentelemetry.javaagent:opentelemetry-javaagent-instrumentation-api:${versions.opentelemetryJavaagentAlpha}")
    add("muzzleTooling", "io.opentelemetry.javaagent:opentelemetry-javaagent-extension-api:${versions.opentelemetryJavaagentAlpha}")
    add("muzzleTooling", "io.opentelemetry.javaagent:opentelemetry-javaagent-tooling:${versions.opentelemetryJavaagentAlpha}")

    //test dependencies
    testInstrumentation "io.opentelemetry.javaagent.instrumentation:opentelemetry-javaagent-kafka-clients-0.11:${versions.opentelemetryJavaagentAlpha}"

    testImplementation("org.testcontainers:kafka:${versions.testContainersKafka}")
    testImplementation("org.apache.kafka:kafka-clients:${versions.kafka}")
    testImplementation("org.awaitility:awaitility:${versions.awaitility}")
    testImplementation("org.apache.commons:commons-lang3:${versions.apacheCommons3}")
}

test.configure { task ->
    setupUnitTests(task)
}

def muzzleVersions = ext.versions

muzzle {
    pass {
        group.set("org.apache.kafka")
        module.set("kafka-clients")
        versions.set("[3.0.1,)")
        assertInverse.set(true)
        extraDependency("com.fasterxml.jackson.core:jackson-databind:${muzzleVersions["jackson"]}")
        extraDependency("com.fasterxml.jackson.core:jackson-core:${muzzleVersions["jackson"]}")
        extraDependency("com.fasterxml.jackson.core:jackson-annotations:${muzzleVersions["jackson"]}")
        extraDependency("com.github.wnameless.json:json-flattener:${muzzleVersions["jsonFlattener"]}")
        extraDependency("com.github.wnameless.json:json-base:${muzzleVersions["jsonBase"]}")
        extraDependency("io.opentelemetry.javaagent:opentelemetry-javaagent:${muzzleVersions.opentelemetryJavaagent}")
    }
}

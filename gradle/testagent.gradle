tasks.withType(Test).configureEach {

    inputs.file(shadowJar.archiveFile)

    jvmArgs "-Dotel.javaagent.debug=true"
    jvmArgs "-javaagent:${configurations.testAgent.files.first().absolutePath}"
    jvmArgs "-Dotel.javaagent.experimental.initializer.jar=${shadowJar.archiveFile.get().asFile.absolutePath}"
    jvmArgs "-Dotel.javaagent.testing.additional-library-ignores.enabled=false"
    jvmArgs "-Dotel.javaagent.testing.fail-on-context-leak=true"
// prevent sporadic gradle deadlocks, see SafeLogger for more details
    jvmArgs "-Dotel.javaagent.testing.transform-safe-logging.enabled=true"
    jvmArgs "-Dotel.metrics.exporter=otlp"

    dependsOn shadowJar

// The sources are packaged into the testing jar so we need to make sure to exclude from the test
// classpath, which automatically inherits them, to ensure our shaded versions are used.
    classpath = classpath.filter {
        if (it == file("$buildDir/resources/main") || it == file("$buildDir/classes/java/main")) {
            return false
        }
        return true
    }
}